name: Release
on:
  create:
    tags:
jobs:
  build:
    name: Release for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            artifact_name: f2
            asset_name: f2-x86_64-unknown-linux-gnu
          - os: macos-latest
            artifact_name: f2
            asset_name: f2-x86_64-apple-darwin
          - os: windows-latest
            artifact_name: f2.exe
            asset_name: f2-x86_64-pc-windows-msvc.exe

    steps:
    - uses: hecrj/setup-rust-action@master
      with:
        rust-version: stable
    - uses: actions/checkout@v1
    - name: Build
      run: cargo build --release
    - name: Strip
      if: (contains(matrix.os, 'macos') || contains(matrix.os, 'ubuntu'))
      run: strip target/release/${{ matrix.artifact_name }}
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/release/${{ matrix.artifact_name }}
        asset_name: ${{ matrix.asset_name }}
        asset_content_type: application/binary
